//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Hubitat.Model
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class hubitatDBEntities : DbContext
    {
        public hubitatDBEntities()
            : base("name=hubitatDBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Pets> Pets { get; set; }
        public virtual DbSet<Transactions> Transactions { get; set; }
        public virtual DbSet<Users> Users { get; set; }
        public virtual DbSet<vw_AllPets> vw_AllPets { get; set; }
        public virtual DbSet<vw_BuyPet> vw_BuyPet { get; set; }
        public virtual DbSet<vw_Customers> vw_Customers { get; set; }
        public virtual DbSet<vw_Employees> vw_Employees { get; set; }
        public virtual DbSet<vw_PetAvailable> vw_PetAvailable { get; set; }
        public virtual DbSet<vw_PetSold> vw_PetSold { get; set; }
        public virtual DbSet<vw_Users> vw_Users { get; set; }
    
        public virtual int sp_PetUpdate(string petID, string petName, string petSpecies, string petBreed, Nullable<int> petAge, string petGender, string petStatus, Nullable<decimal> petPrice, byte[] petImage)
        {
            var petIDParameter = petID != null ?
                new ObjectParameter("petID", petID) :
                new ObjectParameter("petID", typeof(string));
    
            var petNameParameter = petName != null ?
                new ObjectParameter("petName", petName) :
                new ObjectParameter("petName", typeof(string));
    
            var petSpeciesParameter = petSpecies != null ?
                new ObjectParameter("petSpecies", petSpecies) :
                new ObjectParameter("petSpecies", typeof(string));
    
            var petBreedParameter = petBreed != null ?
                new ObjectParameter("petBreed", petBreed) :
                new ObjectParameter("petBreed", typeof(string));
    
            var petAgeParameter = petAge.HasValue ?
                new ObjectParameter("petAge", petAge) :
                new ObjectParameter("petAge", typeof(int));
    
            var petGenderParameter = petGender != null ?
                new ObjectParameter("petGender", petGender) :
                new ObjectParameter("petGender", typeof(string));
    
            var petStatusParameter = petStatus != null ?
                new ObjectParameter("petStatus", petStatus) :
                new ObjectParameter("petStatus", typeof(string));
    
            var petPriceParameter = petPrice.HasValue ?
                new ObjectParameter("petPrice", petPrice) :
                new ObjectParameter("petPrice", typeof(decimal));
    
            var petImageParameter = petImage != null ?
                new ObjectParameter("petImage", petImage) :
                new ObjectParameter("petImage", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_PetUpdate", petIDParameter, petNameParameter, petSpeciesParameter, petBreedParameter, petAgeParameter, petGenderParameter, petStatusParameter, petPriceParameter, petImageParameter);
        }
    
        public virtual int sp_UserUpdate(string userID, string userName, string userType, string firstName, string lastName, string email, string phoneNum, Nullable<System.DateTime> dateCreated)
        {
            var userIDParameter = userID != null ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("userName", userName) :
                new ObjectParameter("userName", typeof(string));
    
            var userTypeParameter = userType != null ?
                new ObjectParameter("userType", userType) :
                new ObjectParameter("userType", typeof(string));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("firstName", firstName) :
                new ObjectParameter("firstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("lastName", lastName) :
                new ObjectParameter("lastName", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var phoneNumParameter = phoneNum != null ?
                new ObjectParameter("phoneNum", phoneNum) :
                new ObjectParameter("phoneNum", typeof(string));
    
            var dateCreatedParameter = dateCreated.HasValue ?
                new ObjectParameter("dateCreated", dateCreated) :
                new ObjectParameter("dateCreated", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UserUpdate", userIDParameter, userNameParameter, userTypeParameter, firstNameParameter, lastNameParameter, emailParameter, phoneNumParameter, dateCreatedParameter);
        }
    }
}
